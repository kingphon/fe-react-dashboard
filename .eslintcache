[{"D:\\Documents\\dev\\fe-react\\src\\index.js":"1","D:\\Documents\\dev\\fe-react\\src\\reportWebVitals.js":"2","D:\\Documents\\dev\\fe-react\\src\\App.js":"3","D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Button\\index.js":"4","D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Input\\index.js":"5","D:\\Documents\\dev\\fe-react-dashboard\\src\\index.js":"6","D:\\Documents\\dev\\fe-react-dashboard\\src\\reportWebVitals.js":"7","D:\\Documents\\dev\\fe-react-dashboard\\src\\App.js":"8","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\District\\index.js":"9","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Province\\index.js":"10","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\templates\\layouts\\Main\\index.js":"11","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Header\\index.js":"12","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\HorizontalSideBar\\index.js":"13","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Input\\index.js":"14","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Button\\index.js":"15","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\FilterStatus\\index.js":"16","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Fieldset\\index.js":"17","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\StatusLabel\\index.js":"18","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\TableModule\\index.js":"19","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\PageSearch\\index.js":"20","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\rootReducer.js":"21","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\axios.js":"22","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\redux-actions.js":"23","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\index.js":"24","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\ModalModule\\index.js":"25","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\CheckBox\\index.js":"26","D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\utils.js":"27","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\FormGroup\\index.js":"28","D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\sweet-alert-modal.js":"29","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\sweet-alert2.js":"30","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\entities.js":"31","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ToggleActive\\index.js":"32","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Province\\ProvinceTable\\index.js":"33","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Province\\ProvinceModal\\index.js":"34","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\index.js":"35","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictTable\\index.js":"36","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ComboBox\\index.js":"37","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\districtReducer.js":"38","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\provinceReducer.js":"39","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Ward\\index.js":"40","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\wardReducer.js":"41","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Ward\\WardTable\\index.js":"42","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Ward\\WardModal\\index.js":"43","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\categoryReducer.js":"44","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\Category\\index.js":"45","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Category\\CategoryTable\\index.js":"46","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Category\\CategoryModal\\index.js":"47","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\TypeGroup\\index.js":"48","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\Type\\index.js":"49","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\typeGroupReducer.js":"50","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\typeReducer.js":"51","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\TypeGroup\\TypeGroupTable\\index.js":"52","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Type\\TypeTable\\index.js":"53","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Type\\TypeModal\\index.js":"54","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\TypeGroup\\TypeGroupModal\\index.js":"55","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Login\\index.js":"56","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\index.js":"57","D:\\Documents\\dev\\fe-react-dashboard\\src\\routes\\AuthRoute.js":"58","D:\\Documents\\dev\\fe-react-dashboard\\src\\routes\\index.js":"59","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\yupSchema.js":"60","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\index.js":"61","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\Mui.js":"62","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\MuiAutoComplete.js":"63","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\Header.js":"64","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\ButtonsResult.js":"65","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\DialogActions\\index.js":"66","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\Test.js":"67","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFInput\\index.js":"68","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFCheckBox\\index.js":"69","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFToggleActive\\index.js":"70","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFComboBox\\index.js":"71"},{"size":588,"mtime":1611843162792,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":1611785842220,"results":"74","hashOfConfig":"73"},{"size":976,"mtime":1612240516728,"results":"75","hashOfConfig":"73"},{"size":852,"mtime":1611806100600,"results":"76","hashOfConfig":"73"},{"size":561,"mtime":1612241483635,"results":"77","hashOfConfig":"73"},{"size":950,"mtime":1614851288956,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":1611785842220,"results":"80","hashOfConfig":"79"},{"size":1777,"mtime":1618975388239,"results":"81","hashOfConfig":"79"},{"size":1846,"mtime":1615884182122,"results":"82","hashOfConfig":"79"},{"size":1833,"mtime":1615884176410,"results":"83","hashOfConfig":"79"},{"size":512,"mtime":1616329428467,"results":"84","hashOfConfig":"79"},{"size":2702,"mtime":1618324951816,"results":"85","hashOfConfig":"79"},{"size":4127,"mtime":1616599967639,"results":"86","hashOfConfig":"79"},{"size":930,"mtime":1619091087926,"results":"87","hashOfConfig":"79"},{"size":852,"mtime":1611806100600,"results":"88","hashOfConfig":"79"},{"size":1306,"mtime":1615557176735,"results":"89","hashOfConfig":"79"},{"size":324,"mtime":1615544675511,"results":"90","hashOfConfig":"79"},{"size":248,"mtime":1612221873717,"results":"91","hashOfConfig":"79"},{"size":10041,"mtime":1615563641033,"results":"92","hashOfConfig":"79"},{"size":640,"mtime":1612256566466,"results":"93","hashOfConfig":"94"},{"size":4843,"mtime":1618493872903,"results":"95","hashOfConfig":"79"},{"size":341,"mtime":1614228140468,"results":"96","hashOfConfig":"94"},{"size":110,"mtime":1614673961637,"results":"97","hashOfConfig":"79"},{"size":620,"mtime":1616600664396,"results":"98","hashOfConfig":"79"},{"size":2887,"mtime":1619319826962,"results":"99","hashOfConfig":"79"},{"size":366,"mtime":1612221860723,"results":"100","hashOfConfig":"79"},{"size":1440,"mtime":1615561880681,"results":"101","hashOfConfig":"79"},{"size":291,"mtime":1612221864332,"results":"102","hashOfConfig":"79"},{"size":745,"mtime":1615556322874,"results":"103","hashOfConfig":"79"},{"size":91,"mtime":1614229126676,"results":"104","hashOfConfig":"79"},{"size":1042,"mtime":1615556607694,"results":"105","hashOfConfig":"79"},{"size":1004,"mtime":1615713663470,"results":"106","hashOfConfig":"79"},{"size":2430,"mtime":1616329100051,"results":"107","hashOfConfig":"79"},{"size":3114,"mtime":1616328962952,"results":"108","hashOfConfig":"79"},{"size":3168,"mtime":1619348909356,"results":"109","hashOfConfig":"79"},{"size":2550,"mtime":1616328787336,"results":"110","hashOfConfig":"79"},{"size":1593,"mtime":1618837186991,"results":"111","hashOfConfig":"79"},{"size":9176,"mtime":1619362261528,"results":"112","hashOfConfig":"79"},{"size":9445,"mtime":1616392328759,"results":"113","hashOfConfig":"79"},{"size":1782,"mtime":1616328659563,"results":"114","hashOfConfig":"79"},{"size":10693,"mtime":1617191828326,"results":"115","hashOfConfig":"79"},{"size":2610,"mtime":1616329293755,"results":"116","hashOfConfig":"79"},{"size":4306,"mtime":1616329045396,"results":"117","hashOfConfig":"79"},{"size":9446,"mtime":1616598386827,"results":"118","hashOfConfig":"79"},{"size":1855,"mtime":1616598591295,"results":"119","hashOfConfig":"79"},{"size":2436,"mtime":1616599660026,"results":"120","hashOfConfig":"79"},{"size":3120,"mtime":1616599592321,"results":"121","hashOfConfig":"79"},{"size":1869,"mtime":1616600725493,"results":"122","hashOfConfig":"79"},{"size":1805,"mtime":1617191691555,"results":"123","hashOfConfig":"79"},{"size":10229,"mtime":1617190932621,"results":"124","hashOfConfig":"79"},{"size":10839,"mtime":1617601096821,"results":"125","hashOfConfig":"79"},{"size":2574,"mtime":1617191305584,"results":"126","hashOfConfig":"79"},{"size":2620,"mtime":1617191567442,"results":"127","hashOfConfig":"79"},{"size":4371,"mtime":1617199019523,"results":"128","hashOfConfig":"79"},{"size":3675,"mtime":1617190817796,"results":"129","hashOfConfig":"79"},{"size":2727,"mtime":1618231779712,"results":"130","hashOfConfig":"79"},{"size":76,"mtime":1614229126664,"results":"131","hashOfConfig":"79"},{"size":670,"mtime":1617888423143,"results":"132","hashOfConfig":"79"},{"size":288,"mtime":1581412980338,"results":"133","hashOfConfig":"79"},{"size":464,"mtime":1619349131133,"results":"134","hashOfConfig":"79"},{"size":1463,"mtime":1619190170012,"results":"135","hashOfConfig":"79"},{"size":3882,"mtime":1619315291632,"results":"136","hashOfConfig":"79"},{"size":14983,"mtime":1619315362293,"results":"137","hashOfConfig":"79"},{"size":3547,"mtime":1618977993676,"results":"138","hashOfConfig":"79"},{"size":1432,"mtime":1618978683071,"results":"139","hashOfConfig":"79"},{"size":1300,"mtime":1619014406184,"results":"140","hashOfConfig":"79"},{"size":774,"mtime":1619093420674,"results":"141","hashOfConfig":"79"},{"size":980,"mtime":1619348918621,"results":"142","hashOfConfig":"79"},{"size":749,"mtime":1619321086650,"results":"143","hashOfConfig":"79"},{"size":1058,"mtime":1619243268234,"results":"144","hashOfConfig":"79"},{"size":1366,"mtime":1619349297758,"results":"145","hashOfConfig":"79"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"14ypwet",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"wkpa6q",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"159"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"hmikxl",{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"159"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"159"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"159"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"159"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"159"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"159"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"159"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"159"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"159"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"159"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"159"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"159"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"159"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"299"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"159"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"D:\\Documents\\dev\\fe-react\\src\\index.js",[],["312","313"],"D:\\Documents\\dev\\fe-react\\src\\reportWebVitals.js",[],"D:\\Documents\\dev\\fe-react\\src\\App.js",[],"D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Button\\index.js",[],"D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Input\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\index.js",[],["314","315"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\reportWebVitals.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\App.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\District\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Province\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\templates\\layouts\\Main\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Header\\index.js",["316","317"],"import React, { useState } from 'react'\r\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport cookie from 'js-cookie'\r\nimport {\r\n  useDispatch\r\n} from 'react-redux'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nimport { doLogout } from '../../../redux/reducers/rootReducer'\r\nimport Button from '../../atoms/Button'\r\nimport Input from '../../atoms/Input'\r\n\r\nconst Header = ({\r\n  headerName,\r\n  createButtonLoading,\r\n  headerLogo,\r\n  onChangeSearchKeywords,\r\n  onOpenCreate,\r\n}) => {\r\n  const [searchKeywords, setSearchKeywords] = useState(\"\")\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const { from } = location.state || { from: { pathname: \"/\" } }\r\n\r\n  const onLogout = () => {\r\n    dispatch(doLogout())\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"h-16 bg-white p-4 px-6 flex items-center justify-between top-0 sticky z-50\">\r\n        <div className=\"flex items-center w-1/4 justify-around\">\r\n          <div className=\"flex items-center\">\r\n            <h3>{headerName}</h3>&nbsp;\r\n                {headerLogo}\r\n          </div>\r\n          <Button\r\n            endIcon={<AddBoxRoundedIcon />}\r\n            color=\"default\"\r\n            onClick={onOpenCreate}\r\n            loading={createButtonLoading}\r\n          >\r\n            Thêm\r\n          </Button>\r\n        </div>\r\n        <div className=\"flex items-center w-2/4 px-2\">\r\n          <Input\r\n            label=\"Tìm kiếm\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchRoundedIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            fullWidth\r\n            value={searchKeywords}\r\n            onChange={(_, { value }) => {\r\n              setSearchKeywords(value)\r\n              onChangeSearchKeywords(value)\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center w-1/4 justify-around\">\r\n          <h3 className=\"cursor-pointer\">Tài khoản</h3>\r\n          <Button startIcon={<NotificationsActiveRoundedIcon />} endIcon={<ArrowDropDownRoundedIcon className=\"-ml-5\" />} color=\"default\" />\r\n          <h3 className=\"cursor-pointer\" onClick={() => dispatch(doLogout(() => history.replace(from)))}>Đăng xuất</h3>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\HorizontalSideBar\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Input\\index.js",["318","319"],"import React from 'react'\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\nimport { TextField } from '@material-ui/core';\r\n\r\n// const { control } = useFormContext();\r\nconst Input = ({\r\n  size = \"small\",\r\n  width = \"100%\",\r\n  variant = \"outlined\",\r\n  style = {},\r\n  margin = \"dense\",\r\n  errors,\r\n  register,\r\n  label,\r\n  onChange,\r\n  value = '',\r\n  // register,\r\n  ...rest\r\n}) => {\r\n  \r\n  return (\r\n  // <Controller\r\n  //   as={TextField}\r\n  //   name={name}\r\n  //   control={control}\r\n  //   defaultValue=\"\"\r\n  //   label={label}\r\n  //   fullWidth={true}\r\n  //   {...props}\r\n  // />\r\n\r\n  <TextField\r\n    style={{ width, marginTop: \"8px\", marginBottom: \"8px\", ...style }}\r\n    error={!!errors}\r\n    label={label}\r\n    margin={margin}\r\n    size={size}\r\n    variant={variant}\r\n    value={value}\r\n    onChange={e => onChange(e, e.currentTarget)}\r\n    // inputRef={register}\r\n    {...rest} />\r\n)}\r\n\r\nexport default Input","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Button\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\FilterStatus\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Fieldset\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\StatusLabel\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\TableModule\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\PageSearch\\index.js",[],["320","321"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\rootReducer.js",["322","323"],"import { HANDLE_SYSTEM_ERROR } from '../../constants/redux-actions'\r\nimport axios from 'axios'\r\nimport cookie from 'js-cookie'\r\nimport { toast } from \"react-toastify\";\r\nimport { USER_TOKEN, USER_AUTH } from '../../constants';\r\n\r\nexport const initialState = {\r\n  formLoading: false,\r\n  loginForm: {},\r\n  userAuth: {},\r\n  systemErrors: {\r\n    message: '',\r\n    detail: ''\r\n  },\r\n  errors: {\r\n    formErrors: {},\r\n    errorMessage: ''\r\n  },\r\n  systemPopup: {\r\n    open: false,\r\n    type: 'success',\r\n    message: ''\r\n  }\r\n}\r\n\r\nconst PATH_API_LOGIN = 'http://localhost:5000/authenticate'\r\nconst PATH_API_LOGOUT = 'http://localhost:5000/logout'\r\nconst createAction = action => `SYSTEM_${action}`\r\n\r\nconst SYSTEM_ERROR_MESSAGE = 'The system has an undefined error, please try again later.'\r\n\r\nconst RESET_SYSTEM_ERRORS = 'RESET_SYSTEM_ERRORS'\r\nconst SET_SYSTEM_POPUP = 'SET_SYSTEM_POPUP'\r\n\r\nexport const reload = pageName => ({ type: `${pageName}_RELOAD` })\r\n\r\nconst SET_LOGIN_FORM = createAction(\"SET_LOGIN_FORM\")\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nexport const setLoginForm = loginForm => ({ type: SET_LOGIN_FORM, loginForm })\r\n\r\nconst SET_FORM_LOADING = createAction(\"SET_FORM_LOADING\")\r\nconst setFormLoading = loading => ({ type: SET_FORM_LOADING, loading })\r\n\r\n// const SET_USER_AUTH = createAction(\"SET_USER_AUTH\")\r\n// export const setUserAuth = userAuth => ({ type: SET_USER_AUTH, userAuth })\r\n\r\nconst HANDLE_FORM_ERRORS = createAction(\"HANDLE_FORM_ERRORS\")\r\n\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\n\r\nexport const doLogin = (params, callback) => dispatch => {\r\n  dispatch(setFormLoading(true))\r\n  const {\r\n    phone,\r\n    password\r\n  } = params;\r\n  const checkParams = {\r\n    phone,\r\n    password\r\n  };\r\n  const formErrors = {}\r\n  for (const param in checkParams) {\r\n    const element = checkParams[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    return axios.post(PATH_API_LOGIN, params, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => {\r\n        cookie.set(USER_TOKEN, response.data.token)\r\n        callback()\r\n      })\r\n      .catch(error => {\r\n        // !response.data.message &&\r\n        toast.error(\"Đã xảy ra lỗi!!\")\r\n        // toast.error(response.data.message)\r\n        dispatch(handleErrors(error, HANDLE_FORM_ERRORS))\r\n      })\r\n      .finally(() => dispatch(setFormLoading(false)))\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(setFormLoading(false));\r\n  }\r\n}\r\n\r\nexport const doLogout = callback => dispatch => {\r\n  return axios.post(PATH_API_LOGOUT, {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n    .then(() => {\r\n      cookie.remove(USER_TOKEN)\r\n      setLoginForm({})\r\n      callback()\r\n    })\r\n    .catch(error =>\r\n      toast.error(\"Đã xảy ra lỗi!!\"))\r\n    .finally(() => dispatch(setFormLoading(false)))\r\n}\r\n\r\nexport const handleErrors = (errors = {}, pageErrorHandle) => {\r\n  console.log(errors)\r\n  if (errors.response) {\r\n    if (errors.response.data && errors.response.data.formErrors) {\r\n      return ({ type: pageErrorHandle, ...errors.response.data })\r\n    }\r\n  }\r\n  return ({ type: HANDLE_SYSTEM_ERROR })\r\n}\r\n\r\nexport const openSystemPopup = (open, message, typePopup = 'success') => {\r\n  return ({ type: SET_SYSTEM_POPUP, open, message, typePopup })\r\n}\r\n\r\nexport const resetSystemErrors = () => ({ type: RESET_SYSTEM_ERRORS })\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case SET_FORM_LOADING: return {\r\n        ...state,\r\n        formLoading: action.loading\r\n      }\r\n      case HANDLE_SYSTEM_ERROR: return {\r\n        ...state,\r\n        systemErrors: {\r\n          message: SYSTEM_ERROR_MESSAGE,\r\n          detail: action.detail\r\n        }\r\n      }\r\n      case RESET_SYSTEM_ERRORS: return {\r\n        ...state,\r\n        systemErrors: initialState.systemErrors\r\n      }\r\n      // case SET_USER_AUTH: return {\r\n      //     ...state,\r\n      //     userAuth: action.userAuth\r\n      // }\r\n      case SET_LOGIN_FORM: return {\r\n        ...state,\r\n        loginForm: action.loginForm\r\n      }\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case SET_SYSTEM_POPUP: return {\r\n        ...state,\r\n        systemPopup: {\r\n          open: action.open,\r\n          type: action.typePopup,\r\n          message: action.message\r\n        }\r\n      }\r\n      default: return {\r\n        ...state\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n\r\n  return state;\r\n}","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\axios.js",[],["324","325"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\redux-actions.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\ModalModule\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\CheckBox\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\utils.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\FormGroup\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\sweet-alert-modal.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\sweet-alert2.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\entities.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ToggleActive\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Province\\ProvinceTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Province\\ProvinceModal\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\index.js",["326","327","328","329","330","331"],"import React, { useEffect } from \"react\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm, } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { schema } from \"./yupSchema\";\r\n\r\nimport RHFCheckBox from \"../../../../atoms/RHFCheckBox\";\r\nimport RHFComboBox from \"../../../../atoms/RHFComboBox\";\r\nimport FormGroup from \"../../../../atoms/FormGroup\";\r\nimport RHFInput from \"../../../../atoms/RHFInput\";\r\nimport RHFToggleActive from \"../../../../atoms/RHFToggleActive\";\r\nimport ModalModule from \"../../../../molecules/ModalModule\";\r\n\r\nimport {\r\n  closeModal,\r\n  doSave,\r\n} from '../../../../../redux/reducers/location/districtReducer';\r\n\r\nconst Render = ({\r\n  openModal,\r\n  formLoading,\r\n  methods,\r\n  district: {\r\n    id\r\n  },\r\n  provinceList,\r\n  onPositive,\r\n  onClose\r\n}) => {\r\n\r\n  const { handleSubmit, watch, getValues, setValues, reset, setValue, control } = methods\r\n  const watchCustomizeSlug = watch(\"customizeSlug\"); // you can supply default value as second argument\r\n\r\n  return (\r\n    <ModalModule\r\n      title={id ? \"Update District\" : \"Create District\"}\r\n      open={openModal}\r\n      loading={formLoading}\r\n      maxWidth=\"md\"\r\n      handleSubmit={handleSubmit(data => onPositive(data))}\r\n      onClose={onClose}\r\n      methods={methods}\r\n    >\r\n      <FormGroup row>\r\n        {id &&\r\n          <RHFInput\r\n            label=\"District Id: \"\r\n            name=\"id\"\r\n            width=\"25%\"\r\n            disabled={true}\r\n          />\r\n        }\r\n        <RHFInput\r\n          label=\"District Name: *\"\r\n          name=\"name\"\r\n          width={id ? \"70%\" : \"100%\"}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <RHFCheckBox\r\n          name=\"customizeSlug\"\r\n          label=\"Customize Slug\"\r\n        />\r\n        <RHFToggleActive />\r\n      </FormGroup>\r\n      {watchCustomizeSlug &&\r\n        <RHFInput\r\n          label=\"District Slug Name: \"\r\n          name=\"slugName\"\r\n        />\r\n      }\r\n      <RHFComboBox\r\n        className=\"w-full my-2\"\r\n        label=\"Province Name: *\"\r\n        name=\"provinceId\"\r\n        selectList={provinceList}\r\n      />\r\n    </ModalModule>\r\n  )\r\n};\r\n\r\nconst DistrictModal = () => {\r\n  const selector = useSelector(\r\n    ({\r\n      districtReducer: {\r\n        openModal,\r\n        formLoading,\r\n        district,\r\n        provinceList,\r\n      }\r\n    }) => ({\r\n      openModal,\r\n      formLoading,\r\n      district,\r\n      provinceList,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  let methods = useForm({\r\n    defaultValues: selector.district,\r\n    resolver: yupResolver(schema),\r\n  })\r\n\r\n  useEffect(() => {\r\n    for (const key in selector.district) {\r\n      if (Object.hasOwnProperty.call(selector.district, key)) {\r\n        const element = selector.district[key];\r\n        methods.setValue(key, element)\r\n      }\r\n    }\r\n    methods.clearErrors()\r\n  }, [selector.district])\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const renderProps = {\r\n    ...selector,\r\n    methods,\r\n\r\n    onPositive: (data) => dispatch(doSave(data)),\r\n    onClose: () => dispatch(closeModal())\r\n  };\r\n  return <Render {...renderProps} />;\r\n};\r\n\r\nexport default DistrictModal;\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ComboBox\\index.js",["332","333","334","335","336"],"import React from 'react'\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useAutocomplete } from '@material-ui/lab';\r\n\r\nconst ComboBox = ({\r\n  required,\r\n  variant = \"outlined\",\r\n  label,\r\n  name,\r\n  error,\r\n  value = \"\",\r\n  inputValue = \"\",\r\n  onChange,\r\n  onChangeInputValue,\r\n  selectList,\r\n  color = 'primary', ...rest }) => {\r\n  return (\r\n    <Autocomplete\r\n      inputValue={inputValue}\r\n      onInputChange={onChangeInputValue}\r\n      value={selectList.find(option => option.value === value)}\r\n      onChange={onChange}\r\n      options={selectList}\r\n      getOptionLabel={(option) => option.label}\r\n      renderInput={(params) => {\r\n        console.log(params)\r\n        return (<TextField\r\n          {...params}\r\n          value={value}\r\n          onChange={onChange}\r\n          label={label}\r\n          variant={variant}\r\n          required={required}\r\n          error={error}\r\n        />)\r\n      }}\r\n      {...rest}\r\n    />\r\n    /* <FormControl variant={variant} error={error} required={required} {...rest}>\r\n      <InputLabel>{label}</InputLabel>\r\n      <Select\r\n        value={value}\r\n        onChange={onChange}\r\n        label={label}\r\n        name={name}\r\n      >\r\n        {selectList.map((select, index) =>\r\n          <MenuItem\r\n            key={index}\r\n            value={select.value}>\r\n            {select.label}\r\n          </MenuItem>\r\n        )}\r\n      </Select>\r\n    </FormControl> */\r\n  )\r\n}\r\n\r\nexport default ComboBox","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\districtReducer.js",["337","338"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\provinceReducer.js",["339"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CONFIRM_DELETE } from \"../../../commons/sweet-alert-modal\";\r\nimport { ALL } from '../../../constants/entities';\r\nimport { REDUX_API_URL } from \"../../../constants/redux-actions\";\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors\r\n} from \"../rootReducer\";\r\n\r\nconst prefix = \"PROVINCE_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/provinces`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  createButtonLoading: false,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  provinceList: [\r\n  ],\r\n  province: {\r\n    name: \"\",\r\n    slugName: \"\",\r\n    status: \"ACTIVE\"\r\n  },\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {},\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst CREATE_BUTTON_LOADING = createAction(\"CREATE_BUTTON_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_PROVINCE = createAction(\"SET_PROVINCE\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst createButtonLoading = loading => ({\r\n  type: CREATE_BUTTON_LOADING,\r\n  loading\r\n});\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  provinceList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setProvince = province => ({ type: SET_PROVINCE, province });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = province => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    status\r\n  } = province;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    status,\r\n  };\r\n  const formErrors = {}\r\n  for (const param in params) {\r\n    const element = params[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    if (!id) {\r\n      dispatch(doCreate(params));\r\n    } else {\r\n      dispatch(doUpdate({ ...params, id }));\r\n    }\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(formLoading(false));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(createButtonLoading(true));\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true))\r\n  dispatch(createButtonLoading(false));\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = provinceId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  axios\r\n    .get(`${PATH_API}/${provinceId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_PROVINCE,\r\n        province: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = province => async dispatch => {\r\n  const params = JSON.stringify(province);\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Province is created successfully!!\")\r\n      dispatch(setProvince(initialState.province));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = province => async dispatch => {\r\n  const params = JSON.stringify(province);\r\n  return axios\r\n    .put(`${PATH_API}/${province.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Province is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = provinceId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(provinceId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(provinceId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${provinceId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Province #${provinceId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Province #${provinceId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      case CREATE_BUTTON_LOADING:\r\n        return { ...state, createButtonLoading: action.loading };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      case MODAL_FORM_LOADING:\r\n        return {\r\n          ...state,\r\n          formLoading: action.loading,\r\n          errors: action.loading ? initialState.errors : state.errors\r\n        };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          provinceList: action.provinceList,\r\n          loading: false\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      case SET_PROVINCE:\r\n        return {\r\n          ...state,\r\n          province: action.province,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          province: initialState.province,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Ward\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\location\\wardReducer.js",["340"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CONFIRM_DELETE } from \"../../../commons/sweet-alert-modal\";\r\nimport { ALL } from '../../../constants/entities';\r\nimport { REDUX_API_URL } from \"../../../constants/redux-actions\";\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors\r\n} from \"../rootReducer\";\r\n\r\n\r\nconst prefix = \"WARD_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/wards`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  createButtonLoading: false,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  wardList: [\r\n  ],\r\n  ward: {\r\n    name: \"\",\r\n    slugName: \"\",\r\n    districtId: \"\",\r\n    status: \"ACTIVE\"\r\n  },\r\n  provinceId: \"\",\r\n  provinceList: [],\r\n  districtList: [],\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {\r\n    },\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst CREATE_BUTTON_LOADING = createAction(\"CREATE_BUTTON_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst PREPARE_DATA_PROVINCE = createAction(\"PREPARE_DATA_PROVINCE\");\r\nconst PREPARE_DATA_DISTRICT = createAction(\"PREPARE_DATA_DISTRICT\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_DISTRICT = createAction(\"SET_DISTRICT\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst createButtonLoading = loading => ({\r\n  type: CREATE_BUTTON_LOADING,\r\n  loading\r\n});\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  wardList: data\r\n});\r\nconst prepareDataProvince = data => ({\r\n  type: PREPARE_DATA_PROVINCE,\r\n  provinceList: data\r\n});\r\nexport const prepareDataDistrict = data => ({\r\n  type: PREPARE_DATA_DISTRICT,\r\n  districtList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setWard = ward => ({ type: SET_DISTRICT, ward });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\nexport const fetchAllProvince = () => async dispatch => {\r\n  return axios\r\n    .get(`${REDUX_API_URL}/provinces-creation`, { timeout: 5000 })\r\n    .then(response => dispatch(prepareDataProvince(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n};\r\n\r\nexport const fetchAllDistrict = (provinceId) => async dispatch => {\r\n  return axios\r\n    .get(`${REDUX_API_URL}/districts-creation/${provinceId}`, { timeout: 5000 })\r\n    .then(response => dispatch(prepareDataDistrict(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n};\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = ward => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    districtId,\r\n    status\r\n  } = ward;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    districtId,\r\n    status,\r\n  };\r\n  const formErrors = {}\r\n  for (const param in params) {\r\n    const element = params[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    if (!id) {\r\n      dispatch(doCreate(params));\r\n    } else {\r\n      dispatch(doUpdate({ ...params, id }));\r\n    }\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(formLoading(false));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(createButtonLoading(true));\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true));\r\n  dispatch(fetchAllProvince());\r\n  dispatch(createButtonLoading(false));\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = wardId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  dispatch(fetchAllProvince());\r\n  axios\r\n    .get(`${PATH_API}/${wardId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_DISTRICT,\r\n        ward: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = ward => async dispatch => {\r\n  const params = JSON.stringify(ward);\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Ward is created successfully!!\")\r\n      dispatch(setWard(initialState.ward));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = ward => async dispatch => {\r\n  const params = JSON.stringify(ward);\r\n  return axios\r\n    .put(`${PATH_API}/${ward.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Ward is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = wardId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(wardId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(wardId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${wardId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Ward #${wardId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Ward #${wardId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      case CREATE_BUTTON_LOADING:\r\n        return { ...state, createButtonLoading: action.loading };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      case MODAL_FORM_LOADING:\r\n        return {\r\n          ...state,\r\n          formLoading: action.loading,\r\n          errors: action.loading ? initialState.errors : state.errors\r\n        };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          wardList: action.wardList,\r\n          loading: false\r\n        };\r\n      case PREPARE_DATA_PROVINCE:\r\n        return {\r\n          ...state,\r\n          provinceList: action.provinceList,\r\n        };\r\n      case PREPARE_DATA_DISTRICT:\r\n        return {\r\n          ...state,\r\n          districtList: action.districtList,\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      case SET_DISTRICT:\r\n        return {\r\n          ...state,\r\n          ward: action.ward,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          ward: initialState.ward,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Ward\\WardTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\Ward\\WardModal\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\categoryReducer.js",["341"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CONFIRM_DELETE } from \"../../../commons/sweet-alert-modal\";\r\nimport { ALL } from '../../../constants/entities';\r\nimport { REDUX_API_URL } from \"../../../constants/redux-actions\";\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors\r\n} from \"../rootReducer\";\r\n\r\nconst prefix = \"CATEGORY_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/categories`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  createButtonLoading: false,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  categoryList: [\r\n  ],\r\n  category: {\r\n    name: \"\",\r\n    slugName: \"\",\r\n    status: \"ACTIVE\"\r\n  },\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {},\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst CREATE_BUTTON_LOADING = createAction(\"CREATE_BUTTON_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_CATEGORY = createAction(\"SET_CATEGORY\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst createButtonLoading = loading => ({\r\n  type: CREATE_BUTTON_LOADING,\r\n  loading\r\n});\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  categoryList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setCategory = category => ({ type: SET_CATEGORY, category });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = category => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    status\r\n  } = category;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    status,\r\n  };\r\n  const formErrors = {}\r\n  for (const param in params) {\r\n    const element = params[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    if (!id) {\r\n      dispatch(doCreate(params));\r\n    } else {\r\n      dispatch(doUpdate({ ...params, id }));\r\n    }\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(formLoading(false));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(createButtonLoading(true));\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true))\r\n  dispatch(createButtonLoading(false));\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = categoryId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  axios\r\n    .get(`${PATH_API}/${categoryId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_CATEGORY,\r\n        category: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = category => async dispatch => {\r\n  const params = JSON.stringify(category);\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Category is created successfully!!\")\r\n      dispatch(setCategory(initialState.category));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = category => async dispatch => {\r\n  const params = JSON.stringify(category);\r\n  return axios\r\n    .put(`${PATH_API}/${category.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Category is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = categoryId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(categoryId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(categoryId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${categoryId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Category #${categoryId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Category #${categoryId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      case CREATE_BUTTON_LOADING:\r\n        return { ...state, createButtonLoading: action.loading };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      case MODAL_FORM_LOADING:\r\n        return {\r\n          ...state,\r\n          formLoading: action.loading,\r\n          errors: action.loading ? initialState.errors : state.errors\r\n        };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          categoryList: action.categoryList,\r\n          loading: false\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      case SET_CATEGORY:\r\n        return {\r\n          ...state,\r\n          category: action.category,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          category: initialState.category,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\Category\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Category\\CategoryTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Category\\CategoryModal\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\TypeGroup\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Classification\\Type\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\typeGroupReducer.js",["342"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CONFIRM_DELETE } from \"../../../commons/sweet-alert-modal\";\r\nimport { ALL } from '../../../constants/entities';\r\nimport { REDUX_API_URL } from \"../../../constants/redux-actions\";\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors\r\n} from \"../rootReducer\";\r\n\r\nconst prefix = \"TYPE_GROUP_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/type-groups`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  createButtonLoading: false,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  typeGroupList: [\r\n  ],\r\n  typeGroup: {\r\n    name: \"\",\r\n    slugName: \"\",\r\n    categoryId: \"\",\r\n    status: \"ACTIVE\"\r\n  },\r\n  categoryList: [],\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {\r\n    },\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst CREATE_BUTTON_LOADING = createAction(\"CREATE_BUTTON_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst PREPARE_DATA_PROVINCE = createAction(\"PREPARE_DATA_PROVINCE\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_TYPE_GROUP = createAction(\"SET_TYPE_GROUP\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst createButtonLoading = loading => ({\r\n  type: CREATE_BUTTON_LOADING,\r\n  loading\r\n});\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  typeGroupList: data\r\n});\r\nconst prepareDataCategory = data => ({\r\n  type: PREPARE_DATA_PROVINCE,\r\n  categoryList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setTypeGroup = typeGroup => ({ type: SET_TYPE_GROUP, typeGroup });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\nexport const fetchAllCategory = () => async dispatch => {\r\n\r\n  return axios\r\n    .get(`${REDUX_API_URL}/categories-creation`, { timeout: 5000 })\r\n    .then(response => dispatch(prepareDataCategory(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n};\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = typeGroup => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    categoryId,\r\n    status\r\n  } = typeGroup;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    categoryId,\r\n    status,\r\n  };\r\n  const formErrors = {}\r\n  for (const param in params) {\r\n    const element = params[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    if (!id) {\r\n      dispatch(doCreate(params));\r\n    } else {\r\n      dispatch(doUpdate({ ...params, id }));\r\n    }\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(formLoading(false));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(createButtonLoading(true));\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true));\r\n  dispatch(fetchAllCategory());\r\n  dispatch(createButtonLoading(false));\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = typeGroupId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  dispatch(fetchAllCategory());\r\n  axios\r\n    .get(`${PATH_API}/${typeGroupId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_TYPE_GROUP,\r\n        typeGroup: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = typeGroup => async dispatch => {\r\n  const params = JSON.stringify(typeGroup);\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"TypeGroup is created successfully!!\")\r\n      dispatch(setTypeGroup(initialState.typeGroup));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = typeGroup => async dispatch => {\r\n  const params = JSON.stringify(typeGroup);\r\n  return axios\r\n    .put(`${PATH_API}/${typeGroup.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"TypeGroup is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = typeGroupId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(typeGroupId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(typeGroupId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${typeGroupId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete TypeGroup #${typeGroupId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete TypeGroup #${typeGroupId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      case CREATE_BUTTON_LOADING:\r\n        return { ...state, createButtonLoading: action.loading };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      case MODAL_FORM_LOADING:\r\n        return {\r\n          ...state,\r\n          formLoading: action.loading,\r\n          errors: action.loading ? initialState.errors : state.errors\r\n        };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          typeGroupList: action.typeGroupList,\r\n          loading: false\r\n        };\r\n      case PREPARE_DATA_PROVINCE:\r\n        return {\r\n          ...state,\r\n          categoryList: action.categoryList,\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      case SET_TYPE_GROUP:\r\n        return {\r\n          ...state,\r\n          typeGroup: action.typeGroup,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          typeGroup: initialState.typeGroup,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\classification\\typeReducer.js",["343"],"import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { CONFIRM_DELETE } from \"../../../commons/sweet-alert-modal\";\r\nimport { ALL } from '../../../constants/entities';\r\nimport { REDUX_API_URL } from \"../../../constants/redux-actions\";\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors\r\n} from \"../rootReducer\";\r\n\r\n\r\nconst prefix = \"TYPE_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/types`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  createButtonLoading: false,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  typeList: [\r\n  ],\r\n  typeItem: {\r\n    name: \"\",\r\n    slugName: \"\",\r\n    typeGroupId: \"\",\r\n    status: \"ACTIVE\"\r\n  },\r\n  categoryId: \"\",\r\n  categoryList: [],\r\n  typeGroupList: [],\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {\r\n    },\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst CREATE_BUTTON_LOADING = createAction(\"CREATE_BUTTON_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst PREPARE_DATA_CATEGORY = createAction(\"PREPARE_DATA_CATEGORY\");\r\nconst PREPARE_DATA_TYPE_GROUP = createAction(\"PREPARE_DATA_TYPE_GROUP\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_TYPE_ITEM = createAction(\"SET_TYPE_ITEM\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\nconst SET_FORM_ERRORS = createAction(\"SET_FORM_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst createButtonLoading = loading => ({\r\n  type: CREATE_BUTTON_LOADING,\r\n  loading\r\n});\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  typeList: data\r\n});\r\nconst prepareDataCategory = data => ({\r\n  type: PREPARE_DATA_CATEGORY,\r\n  categoryList: data\r\n});\r\nexport const prepareDataTypeGroup = data => ({\r\n  type: PREPARE_DATA_TYPE_GROUP,\r\n  typeGroupList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst setFormErrors = formErrors => ({ type: SET_FORM_ERRORS, formErrors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setTypeItem = typeItem => ({ type: SET_TYPE_ITEM, typeItem });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\nexport const fetchAllCategory = () => async dispatch => {\r\n  return axios\r\n    .get(`${REDUX_API_URL}/categories-creation`, { timeout: 5000 })\r\n    .then(response => dispatch(prepareDataCategory(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n};\r\n\r\nexport const fetchAllTypeGroup = (categoryId) => async dispatch => {\r\n  return axios\r\n    .get(`${REDUX_API_URL}/type-groups-creation/${categoryId}`, { timeout: 5000 })\r\n    .then(response => dispatch(prepareDataTypeGroup(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n};\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = typeItem => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    typeGroupId,\r\n    status\r\n  } = typeItem;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    typeGroupId,\r\n    status,\r\n  };\r\n  const formErrors = {}\r\n  for (const param in params) {\r\n    const element = params[param];\r\n    if (!element) {\r\n      formErrors[param] = \"Vui lòng nhập đầy đủ thông tin\"\r\n    }\r\n  }\r\n  if (Object.keys(formErrors).length === 0) {\r\n    dispatch(setFormErrors({}))\r\n    if (!id) {\r\n      dispatch(doCreate(params));\r\n    } else {\r\n      dispatch(doUpdate({ ...params, id }));\r\n    }\r\n  } else {\r\n    dispatch(setFormErrors(formErrors))\r\n    dispatch(formLoading(false));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(createButtonLoading(true));\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true));\r\n  dispatch(fetchAllCategory());\r\n  dispatch(createButtonLoading(false));\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = typeItemId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  dispatch(fetchAllCategory());\r\n  axios\r\n    .get(`${PATH_API}/${typeItemId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_TYPE_ITEM,\r\n        typeItem: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = typeItem => async dispatch => {\r\n  const params = JSON.stringify(typeItem);\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"TypeItem is created successfully!!\")\r\n      dispatch(setTypeItem(initialState.typeItem));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = typeItem => async dispatch => {\r\n  const params = JSON.stringify(typeItem);\r\n  return axios\r\n    .put(`${PATH_API}/${typeItem.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"TypeItem is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = typeItemId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(typeItemId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(typeItemId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${typeItemId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete TypeItem #${typeItemId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete TypeItem #${typeItemId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      case CREATE_BUTTON_LOADING:\r\n        return { ...state, createButtonLoading: action.loading };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      case MODAL_FORM_LOADING:\r\n        return {\r\n          ...state,\r\n          formLoading: action.loading,\r\n          errors: action.loading ? initialState.errors : state.errors\r\n        };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          typeList: action.typeList,\r\n          loading: false\r\n        };\r\n      case PREPARE_DATA_CATEGORY:\r\n        return {\r\n          ...state,\r\n          categoryList: action.categoryList,\r\n        };\r\n      case PREPARE_DATA_TYPE_GROUP:\r\n        return {\r\n          ...state,\r\n          typeGroupList: action.typeGroupList,\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      case SET_TYPE_ITEM:\r\n        return {\r\n          ...state,\r\n          typeItem: action.typeItem,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          typeItem: initialState.typeItem,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case SET_FORM_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            formErrors: action.formErrors,\r\n            ...initialState.errors.message,\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\TypeGroup\\TypeGroupTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Type\\TypeTable\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\Type\\TypeModal\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Classification\\TypeGroup\\TypeGroupModal\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Login\\index.js",["344","345","346","347"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n  shallowEqual\r\n} from 'react-redux'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nimport Input from \"../../../atoms/Input\";\r\nimport FormGroup from \"../../../atoms/FormGroup\";\r\nimport Button from '../../../atoms/Button';\r\nimport { resetSystemErrors } from '../../../../redux/reducers/rootReducer';\r\nimport {\r\n  doLogin,\r\n  setLoginForm,\r\n  getCreateAction,\r\n  setSearchKeywords\r\n} from '../../../../redux/reducers/rootReducer';\r\n\r\n\r\nconst Render = ({\r\n  loginForm: {\r\n    phone,\r\n    password\r\n  },\r\n  formLoading,\r\n  errors: { formErrors },\r\n  onChangeForm,\r\n  onSubmit\r\n}) => {\r\n  return (\r\n    <div className=\"w-full h-full flex justify-center items-center\">\r\n      <ToastContainer />\r\n      <div className=\"bg-white w-1/3 h-80 flex flex-col items-center p-4 justify-around rounded-md shadow\">\r\n        <h2>Login</h2>\r\n        <FormGroup className=\"w-full\">\r\n          <Input label=\"Phone: \"\r\n            name=\"phone\"\r\n            loading={formLoading}\r\n            value={phone}\r\n            onChange={onChangeForm}\r\n            error={formErrors.phone}\r\n          />\r\n          <Input label=\"Password: \"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            loading={formLoading}\r\n            value={password}\r\n            onChange={onChangeForm}\r\n            error={formErrors.password}\r\n          />\r\n        </FormGroup>\r\n        <Button\r\n          loading={formLoading}\r\n          onClick={onSubmit}\r\n          content={\"Login\"}\r\n        />\r\n        <p>Forget your password?</p>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Login = () => {\r\n  const selector = useSelector(({\r\n    rootReducer: {\r\n      formLoading,\r\n      errors,\r\n      loginForm\r\n    }\r\n  }) => ({\r\n    formLoading,\r\n    errors,\r\n    loginForm\r\n  }), shallowEqual)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const { from } = location.state || { from: { pathname: \"/\" } }\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const renderProps = {\r\n    ...selector,\r\n    onChangeForm: (_, { name, value }) => dispatch(setLoginForm({ ...selector.loginForm, [name]: value })),\r\n    onSubmit: () => dispatch(doLogin(selector.loginForm, () => history.replace(from))),\r\n    // onOpenCreate: () => dispatch(getCreateAction()),\r\n    // onChangeSearchKeywords: (searchKeywords) => dispatch(setSearchKeywords(searchKeywords)),\r\n  }\r\n\r\n  return <Render {...renderProps} />\r\n}\r\nexport default Login","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\routes\\AuthRoute.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\routes\\index.js",["348"],"import AuthRoute from \"./AuthRoute\"\r\n\r\nexport const ROUTE_LOGIN = '/login'\r\nexport const ROUTE_USER_PROFILE = '/setting/profile'\r\nexport const ROUTE_USER_CHANGE_PASSWORD = '/setting/change-password'\r\nexport const ROUTE_USER_LOGOUT = '/setting/logout'\r\n\r\nexport default {\r\n    AuthRoute\r\n}","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\yupSchema.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\index.js",["349","350","351"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Header from \"./Header\";\r\nimport Mui from \"./Mui\";\r\nimport ButtonsResult from \"./ButtonsResult\";\r\n// import { EditorState } from \"draft-js\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import \"antd/dist/antd.css\";\r\n// import \"./styles.css\";\r\n\r\nlet renderCount = 0;\r\n\r\nconst defaultValues = {\r\n  Native: \"\",\r\n  TextField: \"\",\r\n  Select: \"\",\r\n  ReactSelect: { value: \"vanilla\", label: \"Vanilla\" },\r\n  Checkbox: false,\r\n  switch: false,\r\n  RadioGroup: \"\",\r\n  numberFormat: 123456789,\r\n  AntdInput: \"Test\",\r\n  AntdCheckbox: true,\r\n  AntdSwitch: true,\r\n  AntdSlider: 20,\r\n  AntdRadio: 1,\r\n  downShift: \"apple\",\r\n  ReactDatepicker: new Date(),\r\n  AntdSelect: \"\",\r\n  // DraftJS: EditorState.createEmpty(),\r\n  MUIPicker: new Date(\"2020-08-01T00:00:00\"),\r\n  country: { code: \"AF\", label: \"Afghanistan\", phone: \"93\" },\r\n  ChakraSwitch: true,\r\n  reactMaskInput: \"\"\r\n};\r\n\r\nconst Test = () => {\r\n  const { handleSubmit, reset, setValue, control } = useForm();\r\n  const [data, setData] = useState(null);\r\n  renderCount++;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit((data) => setData(data))} className=\"form\">\r\n      <Header renderCount={renderCount} />\r\n\r\n      <Mui control={control} />\r\n\r\n      <hr />\r\n      \r\n      <ButtonsResult {...{ data, reset, setValue }} />\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Test\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\Mui.js",["352"],"import * as React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\n// import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  TextField,\r\n  Checkbox,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  ThemeProvider,\r\n  Radio,\r\n  createMuiTheme,\r\n  Slider\r\n} from \"@material-ui/core\";\r\n// import {\r\n//   KeyboardDatePicker,\r\n//   MuiPickersUtilsProvider\r\n// } from \"@material-ui/pickers\";\r\nimport MuiAutoComplete from \"./MuiAutoComplete\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nexport default ({ control }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <div className=\"container\">\r\n      {/* <section>\r\n        <label>MUI Picker</label>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Controller\r\n            name=\"MUIPicker\"\r\n            control={control}\r\n            render={({ field: { ref, ...rest } }) => (\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Date picker dialog\"\r\n                format=\"MM/dd/yyyy\"\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\"\r\n                }}\r\n                {...rest}\r\n              />\r\n            )}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </section> */}\r\n\r\n      <section>\r\n        <label>MUI Checkbox</label>\r\n        <Controller\r\n          name=\"Checkbox\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <Checkbox\r\n              onChange={(e) => field.onChange(e.target.checked)}\r\n              checked={field.value}\r\n            />\r\n          )}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>Radio Group</label>\r\n        <Controller\r\n          render={({ field }) => (\r\n            <RadioGroup aria-label=\"gender\" {...field}>\r\n              <FormControlLabel\r\n                value=\"female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n              />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n            </RadioGroup>\r\n          )}\r\n          name=\"RadioGroup\"\r\n          control={control}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>MUI TextField</label>\r\n        <Controller\r\n          render={({ field }) => <TextField {...field} />}\r\n          name=\"TextField\"\r\n          control={control}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>MUI Select</label>\r\n        <Controller\r\n          render={({ field }) => (\r\n            <Select {...field}>\r\n              <MenuItem value={10}>Ten</MenuItem>\r\n              <MenuItem value={20}>Twenty</MenuItem>\r\n              <MenuItem value={30}>Thirty</MenuItem>\r\n            </Select>\r\n          )}\r\n          name=\"Select\"\r\n          control={control}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>MUI Switch</label>\r\n        <Controller\r\n          name=\"switch\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <Switch\r\n              onChange={(e) => field.onChange(e.target.checked)}\r\n              checked={field.value}\r\n            />\r\n          )}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>MUI Slider</label>\r\n        <Controller\r\n          name=\"MUI_Slider\"\r\n          control={control}\r\n          defaultValue={[0, 10]}\r\n          render={({ field }) => (\r\n            <Slider\r\n              {...field}\r\n              onChange={(_, value) => {\r\n                field.onChange(value);\r\n              }}\r\n              valueLabelDisplay=\"auto\"\r\n              max={10}\r\n              step={1}\r\n            />\r\n          )}\r\n        />\r\n      </section>\r\n\r\n      <section>\r\n        <label>MUI autocomplete</label>\r\n        <MuiAutoComplete control={control} />\r\n      </section>\r\n    </div>\r\n  </ThemeProvider>\r\n);\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\MuiAutoComplete.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\Header.js",["353"],"import React from \"react\";\r\n\r\nexport default ({ renderCount }) => (\r\n  <>\r\n    <span className=\"counter\">Render Count: {renderCount}</span>\r\n    <h1 className=\"h1\">\r\n      <svg\r\n        width=\"40px\"\r\n        height=\"40px\"\r\n        viewBox=\"0 0 150 150\"\r\n        style={{ top: 9, position: \"relative\", marginRight: 10 }}\r\n      >\r\n        <defs />\r\n        <g stroke=\"none\" fill=\"none\">\r\n          <g>\r\n            <rect\r\n              id=\"Rectangle\"\r\n              fill=\"#EC5990\"\r\n              x=\"0\"\r\n              y=\"0\"\r\n              width=\"150\"\r\n              height=\"150\"\r\n              rx=\"20\"\r\n            />\r\n            <g\r\n              id=\"logo\"\r\n              transform=\"translate(40.000000, 32.000000)\"\r\n              fill=\"#FFFFFF\"\r\n            >\r\n              <g id=\"Group\">\r\n                <path\r\n                  d=\"M58.56,6.32 L43.14,6.32 C42.0094162,2.78084259 38.7203539,0.378725649 40.005,0.378725649 C31.289646140.378725649 28.0005838,2.78084259 26.87,6.32 L11.44,6.32 C5.36486775,6.32 0.44,11.2448678 0.44,17.32 L0.44,74.63 C0.44,80.7051322 5.36486775,85.63 11.44,85.63 L58.56,85.63 C64.6351322,85.63 69.56,80.7051322 69.56,74.63 L69.56,17.32 C69.56,11.2448678 64.6351322,6.32 58.56,6.32 L58.56,6.32 Z M27.64,8.32 C28.1196928,8.33067365 28.5393583,7.9991379 28.64,7.53 C29.2948669,4.52524549 31.9547113,2.38265933 35.03,2.38265933 C38.1052887,2.38265933 40.7651331,4.52524549 41.42,7.53 C41.5206417,7.9991379 41.9403072,8.33067365 42.42,8.32 L47.8,8.32 L47.8,14.87 C47.8,16.5268542 46.4568542,17.87 44.8,17.87 L25.25,17.87 C23.5931458,17.87 22.25,16.5268542 22.25,14.87 L22.25,8.32 L27.64,8.32 Z M67.56,74.63 C67.56,79.6005627 63.5305627,83.63 58.56,83.63 L11.44,83.63 C6.46943725,83.63 2.44,79.6005627 2.44,74.63 L2.44,17.32 C2.44,12.3494373 6.46943725,8.32 11.44,8.32 L20.25,8.32 L20.25,14.87 C20.25,17.6314237 22.4885763,19.87 25.25,19.87 L44.75,19.87 C47.5114237,19.87 49.75,17.6314237 49.75,14.87 L49.75,8.32 L58.56,8.32 C63.5305627,8.32 67.56,12.3494373 67.56,17.32 L67.56,74.63 Z\"\r\n                  id=\"Shape\"\r\n                />\r\n                <path\r\n                  d=\"M56.6,39 L39,39 C38.4477153,39 38,39.4477153 38,40 C38,40.5522847 38.4477153,41 39,41 L56.6,41 C57.1522847,41 57.6,40.5522847 57.6,40 C57.6,39.4477153 57.1522847,39 56.6,39 L56.6,39 Z\"\r\n                  id=\"Shape\"\r\n                />\r\n                <path\r\n                  d=\"M30.6,39 L13,39 C12.4477153,39 12,39.4477153 12,40 C12,40.5522847 12.4477153,41 13,41 L30.6,41 C31.1522847,41 31.6,40.5522847 31.6,40 C31.6,39.4477153 31.1522847,39 30.6,39 L30.6,39 Z\"\r\n                  id=\"Shape\"\r\n                />\r\n                <path\r\n                  d=\"M56.65,62 L39,62 C38.4477153,62 38,62.4477153 38,63 C38,63.5522847 38.4477153,64 39,64 L56.65,64 C57.2022847,64 57.65,63.5522847 57.65,63 C57.65,62.4477153 57.2022847,62 56.65,62 L56.65,62 Z\"\r\n                  id=\"Shape\"\r\n                />\r\n                <path\r\n                  d=\"M30.65,62 L13,62 C12.4477153,62 12,62.4477153 12,63 C12,63.5522847 12.4477153,64 13,64 L30.65,64 C31.2022847,64 31.65,63.5522847 31.65,63 C31.65,62.4477153 31.2022847,62 30.65,62 L30.65,62 Z\"\r\n                  id=\"Shape\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n      React Hook Form - Controller\r\n    </h1>\r\n    <p style={{ fontSize: 14, lineHeight: 1.3 }}>\r\n      Components that are using Controller. Render count indicate how many\r\n      re-renders triggered during user interaction at the form level.\r\n    </p>\r\n  </>\r\n);\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Authentication\\Test\\ButtonsResult.js",["354"],"import React from \"react\";\r\n// import { convertToRaw, EditorState } from \"draft-js\";\r\n\r\nexport default ({ data, reset, setValue }) => {\r\n  return (\r\n    <>\r\n      {data && (\r\n        <pre style={{ textAlign: \"left\", color: \"white\" }}>\r\n          {JSON.stringify(\r\n            {\r\n              ...data,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </pre>\r\n      )}\r\n\r\n      <button\r\n        className=\"button buttonBlack\"\r\n        type=\"button\"\r\n        onClick={() => {\r\n          reset({\r\n            Native: \"\",\r\n            TextField: \"\",\r\n            Select: \"\",\r\n            ReactSelect: { value: \"vanilla\", label: \"Vanilla\" },\r\n            Checkbox: false,\r\n            switch: false,\r\n            RadioGroup: \"\",\r\n            numberFormat: 123456789,\r\n            AntdInput: \"Test\",\r\n            AntdCheckbox: true,\r\n            AntdSwitch: true,\r\n            AntdSlider: 20,\r\n            AntdRadio: 1,\r\n            downShift: \"apple\",\r\n            ReactDatepicker: new Date(),\r\n            AntdSelect: \"\",\r\n            // DraftJS: EditorState.createEmpty(),\r\n            MUIPicker: new Date(\"2020-08-01T00:00:00\"),\r\n            country: { code: \"AF\", label: \"Afghanistan\", phone: \"93\" },\r\n            ChakraSwitch: true,\r\n            reactMaskInput: \"\"\r\n          });\r\n        }}\r\n      >\r\n        Reset Form\r\n      </button>\r\n      <button className=\"button\">submit</button>\r\n    </>\r\n  );\r\n};\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\DialogActions\\index.js",["355","356"],"import React from 'react';\r\nimport DialogActionsMUI from '@material-ui/core/DialogActions';\r\nimport Button from '../../atoms/Button';\r\nimport { Close, Check } from '@material-ui/icons';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport default function DialogActions({\r\n  loading = false,\r\n  positiveDisabled = false,\r\n  showPositiveButton = true,\r\n  positiveButtonLabel = \"Ok\",\r\n  negativeButtonLabel = \"Cancel\",\r\n  onPositive,\r\n  onClose,\r\n}) {\r\n\r\n  const handleClose = (_, reason) => {\r\n    if (reason !== 'backdropClick' || reason !== 'escapeKeyDown') {\r\n      onClose()\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <DialogActionsMUI\r\n      className=\"py-3 px-4\"\r\n    >\r\n      {showPositiveButton && <Button\r\n        loading={loading}\r\n        disabled={positiveDisabled}\r\n        icon={<Check />}\r\n        // onClick={onPositive}\r\n        content={positiveButtonLabel}\r\n      />}\r\n      <Button\r\n        icon={<Close />}\r\n        color=\"default\"\r\n        disabled={loading}\r\n        onClick={handleClose}\r\n        content={negativeButtonLabel}\r\n      />\r\n    </DialogActionsMUI>\r\n  )\r\n}\r\n\r\nconst ModalSuccess = ({ message }) => (\r\n  <Alert severity=\"success\">\r\n    {message}\r\n  </Alert>\r\n)\r\n\r\nconst ModalError = ({ message }) => (\r\n  <Alert severity=\"error\">\r\n    {message}\r\n  </Alert>\r\n)",["357","358"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Location\\District\\DistrictModal\\Test.js",["359","360","361","362","363","364","365","366","367","368"],"import * as React from \"react\";\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\nimport {\r\n  TextField,\r\n  Checkbox,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  ThemeProvider,\r\n  Radio,\r\n  createMuiTheme,\r\n  Slider\r\n} from \"@material-ui/core\";\r\n\r\n\r\nexport default function Test({ control }) {\r\n  const methods = useFormContext();\r\n  return (<Controller\r\n    name=\"Checkbox\"\r\n    control={control}\r\n    render={({ field: { onChange, value } }) => (\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            onChange={(e) => onChange(e.target.checked)}\r\n            checked={value}\r\n            color='primary'\r\n            // {...rest}\r\n          />\r\n        }\r\n        label=\"cc\"\r\n      />\r\n    )}\r\n  />)\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFInput\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFCheckBox\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFToggleActive\\index.js",["369","370"],"import React from 'react'\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\nimport { Switch, FormGroup, FormControlLabel } from '@material-ui/core';\r\nimport { ACTIVE, HIDDEN } from '../../../constants/entities';\r\n\r\nconst RHFToggleActive = ({\r\n  labelPlacement = \"start\",\r\n  color = \"primary\",\r\n  name = 'status',\r\n  // defaultValue = true,\r\n  ...rest\r\n}) => {\r\n\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      // defaultValue={defaultValue}\r\n      render={({ field: { onChange, value } }) => (\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={value}\r\n                color={color}\r\n                onChange={(e) => onChange(e.target.checked)}\r\n                {...rest}\r\n              />\r\n            }\r\n            label={value ? 'Hiển thị' : 'Ẩn'}\r\n            labelPlacement={labelPlacement}\r\n          />\r\n        </FormGroup>\r\n      )}\r\n    />\r\n  )\r\n}\r\n\r\nexport default RHFToggleActive","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\RHFComboBox\\index.js",[],{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"371","replacedBy":"375"},{"ruleId":"373","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":7,"column":8,"nodeType":"379","messageId":"380","endLine":7,"endColumn":14},{"ruleId":"377","severity":1,"message":"381","line":31,"column":9,"nodeType":"379","messageId":"380","endLine":31,"endColumn":17},{"ruleId":"377","severity":1,"message":"382","line":2,"column":10,"nodeType":"379","messageId":"380","endLine":2,"endColumn":24},{"ruleId":"377","severity":1,"message":"383","line":2,"column":26,"nodeType":"379","messageId":"380","endLine":2,"endColumn":36},{"ruleId":"371","replacedBy":"384"},{"ruleId":"373","replacedBy":"385"},{"ruleId":"377","severity":1,"message":"386","line":5,"column":22,"nodeType":"379","messageId":"380","endLine":5,"endColumn":31},{"ruleId":"387","severity":1,"message":"388","line":125,"column":1,"nodeType":"389","endLine":176,"endColumn":2},{"ruleId":"371","replacedBy":"390"},{"ruleId":"373","replacedBy":"391"},{"ruleId":"377","severity":1,"message":"392","line":31,"column":32,"nodeType":"379","messageId":"380","endLine":31,"endColumn":41},{"ruleId":"377","severity":1,"message":"393","line":31,"column":43,"nodeType":"379","messageId":"380","endLine":31,"endColumn":52},{"ruleId":"377","severity":1,"message":"394","line":31,"column":54,"nodeType":"379","messageId":"380","endLine":31,"endColumn":59},{"ruleId":"377","severity":1,"message":"395","line":31,"column":61,"nodeType":"379","messageId":"380","endLine":31,"endColumn":69},{"ruleId":"377","severity":1,"message":"396","line":31,"column":71,"nodeType":"379","messageId":"380","endLine":31,"endColumn":78},{"ruleId":"397","severity":1,"message":"398","line":113,"column":6,"nodeType":"399","endLine":113,"endColumn":25,"suggestions":"400"},{"ruleId":"377","severity":1,"message":"401","line":2,"column":10,"nodeType":"379","messageId":"380","endLine":2,"endColumn":21},{"ruleId":"377","severity":1,"message":"402","line":2,"column":23,"nodeType":"379","messageId":"380","endLine":2,"endColumn":33},{"ruleId":"377","severity":1,"message":"403","line":2,"column":35,"nodeType":"379","messageId":"380","endLine":2,"endColumn":41},{"ruleId":"377","severity":1,"message":"404","line":2,"column":43,"nodeType":"379","messageId":"380","endLine":2,"endColumn":51},{"ruleId":"377","severity":1,"message":"405","line":5,"column":10,"nodeType":"379","messageId":"380","endLine":5,"endColumn":25},{"ruleId":"377","severity":1,"message":"406","line":10,"column":3,"nodeType":"379","messageId":"380","endLine":10,"endColumn":15},{"ruleId":"387","severity":1,"message":"388","line":240,"column":1,"nodeType":"389","endLine":310,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":238,"column":1,"nodeType":"389","endLine":317,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":271,"column":1,"nodeType":"389","endLine":360,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":238,"column":1,"nodeType":"389","endLine":317,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":257,"column":1,"nodeType":"389","endLine":341,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":271,"column":1,"nodeType":"389","endLine":360,"endColumn":2},{"ruleId":"377","severity":1,"message":"407","line":1,"column":17,"nodeType":"379","messageId":"380","endLine":1,"endColumn":25},{"ruleId":"377","severity":1,"message":"408","line":14,"column":10,"nodeType":"379","messageId":"380","endLine":14,"endColumn":27},{"ruleId":"377","severity":1,"message":"409","line":18,"column":3,"nodeType":"379","messageId":"380","endLine":18,"endColumn":18},{"ruleId":"377","severity":1,"message":"410","line":19,"column":3,"nodeType":"379","messageId":"380","endLine":19,"endColumn":20},{"ruleId":"387","severity":1,"message":"411","line":8,"column":1,"nodeType":"389","endLine":10,"endColumn":2},{"ruleId":"377","severity":1,"message":"412","line":2,"column":8,"nodeType":"379","messageId":"380","endLine":2,"endColumn":16},{"ruleId":"377","severity":1,"message":"383","line":3,"column":19,"nodeType":"379","messageId":"380","endLine":3,"endColumn":29},{"ruleId":"377","severity":1,"message":"413","line":14,"column":7,"nodeType":"379","messageId":"380","endLine":14,"endColumn":20},{"ruleId":"387","severity":1,"message":"414","line":29,"column":1,"nodeType":"389","endLine":150,"endColumn":3},{"ruleId":"387","severity":1,"message":"414","line":3,"column":1,"nodeType":"389","endLine":63,"endColumn":3},{"ruleId":"387","severity":1,"message":"414","line":4,"column":1,"nodeType":"389","endLine":53,"endColumn":3},{"ruleId":"377","severity":1,"message":"415","line":46,"column":7,"nodeType":"379","messageId":"380","endLine":46,"endColumn":19},{"ruleId":"377","severity":1,"message":"416","line":52,"column":7,"nodeType":"379","messageId":"380","endLine":52,"endColumn":17},{"ruleId":"371","replacedBy":"417"},{"ruleId":"373","replacedBy":"418"},{"ruleId":"377","severity":1,"message":"419","line":4,"column":3,"nodeType":"379","messageId":"380","endLine":4,"endColumn":12},{"ruleId":"377","severity":1,"message":"403","line":6,"column":3,"nodeType":"379","messageId":"380","endLine":6,"endColumn":9},{"ruleId":"377","severity":1,"message":"404","line":7,"column":3,"nodeType":"379","messageId":"380","endLine":7,"endColumn":11},{"ruleId":"377","severity":1,"message":"420","line":8,"column":3,"nodeType":"379","messageId":"380","endLine":8,"endColumn":9},{"ruleId":"377","severity":1,"message":"421","line":9,"column":3,"nodeType":"379","messageId":"380","endLine":9,"endColumn":13},{"ruleId":"377","severity":1,"message":"422","line":11,"column":3,"nodeType":"379","messageId":"380","endLine":11,"endColumn":16},{"ruleId":"377","severity":1,"message":"423","line":12,"column":3,"nodeType":"379","messageId":"380","endLine":12,"endColumn":8},{"ruleId":"377","severity":1,"message":"424","line":13,"column":3,"nodeType":"379","messageId":"380","endLine":13,"endColumn":17},{"ruleId":"377","severity":1,"message":"425","line":14,"column":3,"nodeType":"379","messageId":"380","endLine":14,"endColumn":9},{"ruleId":"377","severity":1,"message":"426","line":19,"column":9,"nodeType":"379","messageId":"380","endLine":19,"endColumn":16},{"ruleId":"377","severity":1,"message":"427","line":4,"column":10,"nodeType":"379","messageId":"380","endLine":4,"endColumn":16},{"ruleId":"377","severity":1,"message":"428","line":4,"column":18,"nodeType":"379","messageId":"380","endLine":4,"endColumn":24},"no-native-reassign",["429"],"no-negated-in-lhs",["430"],["429"],["430"],"no-unused-vars","'cookie' is defined but never used.","Identifier","unusedVar","'onLogout' is assigned a value but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.",["429"],["430"],"'USER_AUTH' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["429"],["430"],"'getValues' is assigned a value but never used.","'setValues' is assigned a value but never used.","'reset' is assigned a value but never used.","'setValue' is assigned a value but never used.","'control' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'methods'. Either include it or remove the dependency array.","ArrayExpression",["431"],"'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'useAutocomplete' is defined but never used.","'handleErrors' is defined but never used.","'useState' is defined but never used.","'resetSystemErrors' is defined but never used.","'getCreateAction' is defined but never used.","'setSearchKeywords' is defined but never used.","Assign object to a variable before exporting as module default","'ReactDOM' is defined but never used.","'defaultValues' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","'ModalSuccess' is assigned a value but never used.","'ModalError' is assigned a value but never used.",["429"],["430"],"'TextField' is defined but never used.","'Switch' is defined but never used.","'RadioGroup' is defined but never used.","'ThemeProvider' is defined but never used.","'Radio' is defined but never used.","'createMuiTheme' is defined but never used.","'Slider' is defined but never used.","'methods' is assigned a value but never used.","'ACTIVE' is defined but never used.","'HIDDEN' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"432","fix":"433"},"Update the dependencies array to be: [methods, selector.district]",{"range":"434","text":"435"},[2872,2891],"[methods, selector.district]"]