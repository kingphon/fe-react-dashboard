[{"D:\\Documents\\dev\\fe-react\\src\\index.js":"1","D:\\Documents\\dev\\fe-react\\src\\reportWebVitals.js":"2","D:\\Documents\\dev\\fe-react\\src\\App.js":"3","D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Button\\index.js":"4","D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Input\\index.js":"5","D:\\Documents\\dev\\fe-react-dashboard\\src\\index.js":"6","D:\\Documents\\dev\\fe-react-dashboard\\src\\reportWebVitals.js":"7","D:\\Documents\\dev\\fe-react-dashboard\\src\\App.js":"8","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\District\\index.js":"9","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Zone\\index.js":"10","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Province\\index.js":"11","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\templates\\layouts\\Main\\index.js":"12","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Header\\index.js":"13","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\HorizontalSideBar\\index.js":"14","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Input\\index.js":"15","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Button\\index.js":"16","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Province\\ProvinceTable\\index.js":"17","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\FilterStatus\\index.js":"18","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Fieldset\\index.js":"19","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\StatusLabel\\index.js":"20","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\TableModule\\index.js":"21","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\PageSearch\\index.js":"22","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\provinceReducer.js":"23","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\rootReducer.js":"24","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\axios.js":"25","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\redux-actions.js":"26","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\index.js":"27","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Province\\ProvinceModal\\index.js":"28","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\ModalModule\\index.js":"29","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\CheckBox\\index.js":"30","D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\utils.js":"31","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\FormGroup\\index.js":"32","D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\sweet-alert-modal.js":"33","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\sweet-alert2.js":"34","D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\entities.js":"35","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ToggleActive\\index.js":"36"},{"size":588,"mtime":1611843162792,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1611785842220,"results":"39","hashOfConfig":"38"},{"size":976,"mtime":1612240516728,"results":"40","hashOfConfig":"38"},{"size":852,"mtime":1611806100600,"results":"41","hashOfConfig":"38"},{"size":561,"mtime":1612241483635,"results":"42","hashOfConfig":"38"},{"size":950,"mtime":1614851288956,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1611785842220,"results":"45","hashOfConfig":"44"},{"size":976,"mtime":1612240516728,"results":"46","hashOfConfig":"44"},{"size":328,"mtime":1612180271967,"results":"47","hashOfConfig":"44"},{"size":295,"mtime":1612180142965,"results":"48","hashOfConfig":"44"},{"size":1860,"mtime":1615540162245,"results":"49","hashOfConfig":"44"},{"size":540,"mtime":1615439789894,"results":"50","hashOfConfig":"44"},{"size":2206,"mtime":1615539938970,"results":"51","hashOfConfig":"44"},{"size":3341,"mtime":1615439815223,"results":"52","hashOfConfig":"44"},{"size":561,"mtime":1612241483635,"results":"53","hashOfConfig":"44"},{"size":852,"mtime":1611806100600,"results":"54","hashOfConfig":"44"},{"size":2368,"mtime":1615564501935,"results":"55","hashOfConfig":"44"},{"size":1306,"mtime":1615557176735,"results":"56","hashOfConfig":"44"},{"size":324,"mtime":1615544675511,"results":"57","hashOfConfig":"44"},{"size":248,"mtime":1612221873717,"results":"58","hashOfConfig":"44"},{"size":10041,"mtime":1615563641033,"results":"59","hashOfConfig":"44"},{"size":640,"mtime":1612256566466,"results":"60","hashOfConfig":"44"},{"size":8930,"mtime":1615564641630,"results":"61","hashOfConfig":"44"},{"size":4441,"mtime":1614229319188,"results":"62","hashOfConfig":"44"},{"size":341,"mtime":1614228140468,"results":"63","hashOfConfig":"44"},{"size":110,"mtime":1614673961637,"results":"64","hashOfConfig":"44"},{"size":212,"mtime":1614228392272,"results":"65","hashOfConfig":"44"},{"size":3045,"mtime":1615557292167,"results":"66","hashOfConfig":"44"},{"size":2951,"mtime":1614848336378,"results":"67","hashOfConfig":"44"},{"size":366,"mtime":1612221860723,"results":"68","hashOfConfig":"44"},{"size":1440,"mtime":1615561880681,"results":"69","hashOfConfig":"44"},{"size":291,"mtime":1612221864332,"results":"70","hashOfConfig":"44"},{"size":745,"mtime":1615556322874,"results":"71","hashOfConfig":"44"},{"size":91,"mtime":1614229126676,"results":"72","hashOfConfig":"44"},{"size":1042,"mtime":1615556607694,"results":"73","hashOfConfig":"44"},{"size":929,"mtime":1615557176735,"results":"74","hashOfConfig":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"14ypwet",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"hmikxl",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Documents\\dev\\fe-react\\src\\index.js",[],["155","156"],"D:\\Documents\\dev\\fe-react\\src\\reportWebVitals.js",[],"D:\\Documents\\dev\\fe-react\\src\\App.js",[],"D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Button\\index.js",[],"D:\\Documents\\dev\\fe-react\\src\\components\\atoms\\Input\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\index.js",[],["157","158"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\reportWebVitals.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\App.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\District\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Zone\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\pages\\Location\\Province\\index.js",["159"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  useDispatch,\r\n  useSelector,\r\n  shallowEqual\r\n} from 'react-redux'\r\nimport BusinessRoundedIcon from '@material-ui/icons/BusinessRounded';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Header from '../../../organisms/Header'\r\nimport ProvinceTable from '../../../organisms/Province/ProvinceTable'\r\nimport ProvinceModal from '../../../organisms/Province/ProvinceModal'\r\nimport { resetSystemErrors } from '../../../../redux/reducers/rootReducer';\r\nimport {\r\n  fetchAll,\r\n  getCreateAction,\r\n  setSearchKeywords\r\n} from '../../../../redux/reducers/provinceReducer';\r\n\r\n\r\nconst Render = ({\r\n  createButtonLoading,\r\n  onChangeSearchKeywords,\r\n  onOpenCreate\r\n}) => {\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <Header\r\n        headerName={\"Tỉnh\"}\r\n        headerLogo={<BusinessRoundedIcon />}\r\n        onOpenCreate={onOpenCreate}\r\n        createButtonLoading={createButtonLoading}\r\n        // searchKeywords={searchKeywords}\r\n        onChangeSearchKeywords={onChangeSearchKeywords}\r\n      />\r\n      <ToastContainer />\r\n      <ProvinceTable />\r\n      <ProvinceModal />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Province = () => {\r\n  const selector = useSelector(({\r\n    provinceReducer: {\r\n      createButtonLoading,\r\n    }\r\n  }) => ({\r\n    createButtonLoading,\r\n  }), shallowEqual)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(resetSystemErrors())\r\n    dispatch(fetchAll())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const renderProps = {\r\n    ...selector,\r\n    onOpenCreate: () => dispatch(getCreateAction()),\r\n    onChangeSearchKeywords: (searchKeywords) => dispatch(setSearchKeywords(searchKeywords)),\r\n  }\r\n\r\n  return <Render {...renderProps} />\r\n}\r\nexport default Province","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\templates\\layouts\\Main\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Header\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\HorizontalSideBar\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Input\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Button\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Province\\ProvinceTable\\index.js",["160","161","162","163","164"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nimport { DEFAULT_STATUS, ALL, ACTIVE, HIDDEN, DELETED } from '../../../../constants/entities'\r\nimport FilterStatus from '../../../molecules/FilterStatus';\r\nimport TableModule from \"../../../molecules/TableModule\";\r\nimport StatusLabel from '../../../atoms/StatusLabel';\r\n// REDUX\r\nimport { doFilters, getUpdateAction, doDelete } from '../../../../redux/reducers/provinceReducer'\r\n\r\nconst headCells = [\r\n  { id: \"name\", label: \"Province Name\" },\r\n  { id: \"slugName\", label: \"Slug Name\" },\r\n  { id: \"status\", label: \"Status\" },\r\n];\r\n\r\nconst TableRowModule = ({ name, slugName, status }) => (\r\n  <>\r\n    <TableCell style={{ maxWidth: '230px' }}>\r\n      <span>{name}</span>\r\n    </TableCell>\r\n    <TableCell>{slugName}</TableCell>\r\n    <TableCell>\r\n      <StatusLabel {...DEFAULT_STATUS[status]} />\r\n    </TableCell>\r\n  </>\r\n)\r\n\r\nconst LIST_STATUS = [\r\n  { key: ALL, label: \"All\" },\r\n  { key: ACTIVE, label: \"Active\" },\r\n  { key: HIDDEN, label: \"Hidden\" },\r\n]\r\nconst Render = ({\r\n  provinceList,\r\n  filters,\r\n  loading,\r\n  searchKeywords,\r\n  onOpenUpdate,\r\n  onChangeStatus,\r\n  onDelete\r\n}) => (\r\n  <TableModule\r\n    loading={loading}\r\n    selectKey=\"id\"\r\n    headCells={headCells}\r\n    dataSources={filters.status == ALL ? provinceList :\r\n      provinceList.filter(item => item.status == filters.status)\r\n    }\r\n    searchKeywords={searchKeywords}\r\n    row={TableRowModule}\r\n    onDelete={onDelete}\r\n    onOpenUpdate={provinceId => onOpenUpdate(provinceId)}\r\n  >\r\n    <FilterStatus\r\n      statusValue={filters.status}\r\n      listStatus={LIST_STATUS}\r\n      onChangeStatus={onChangeStatus}\r\n    />\r\n  </TableModule>\r\n)\r\n\r\nexport default function ProvinceTable() {\r\n  const selector = useSelector(({\r\n    provinceReducer: { provinceList, filters, searchKeywords, loading }\r\n  }) => ({ provinceList, filters, searchKeywords, loading }), shallowEqual)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const renderProps = {\r\n    ...selector,\r\n    onOpenUpdate: provinceId => dispatch(getUpdateAction(provinceId)),\r\n    onDelete: provinceId => dispatch(doDelete(provinceId)),\r\n    onChangeStatus: status => dispatch(doFilters({ ...selector.filters, status })),\r\n  }\r\n\r\n  return <Render {...renderProps} />\r\n}","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\FilterStatus\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\Fieldset\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\StatusLabel\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\TableModule\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\PageSearch\\index.js",[],["165","166"],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\provinceReducer.js",["167","168"],"import axios from \"axios\";\r\n\r\nimport { REDUX_API_URL } from \"../../constants/redux-actions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CONFIRM_DELETE } from \"../../commons/sweet-alert-modal\"\r\nimport { ALL } from '../../constants/entities'\r\n\r\n\r\nimport {\r\n  handleErrors,\r\n  resetSystemErrors,\r\n  openSystemPopup\r\n} from \"./rootReducer\";\r\n\r\nconst prefix = \"PROVINCE_\";\r\n// API\r\nconst PATH_API = `${REDUX_API_URL}/provinces`;\r\nconst createAction = action => `${prefix}${action}`;\r\n\r\nexport const initialState = {\r\n  loading: true,\r\n  formLoading: false,\r\n  modalFormSuccessMessage: \"\",\r\n  openModal: false,\r\n  filters: {\r\n    status: ALL\r\n  },\r\n  provinceList: [\r\n  ],\r\n  province: {\r\n  },\r\n  searchKeywords: \"\",\r\n  errors: {\r\n    formErrors: {},\r\n    errorMessage: \"\"\r\n  }\r\n};\r\n\r\nconst LIST_LOADING = createAction(\"LIST_LOADING\");\r\nconst OPEN_MODAL = createAction(\"OPEN_MODAL\");\r\nconst PREPARE_DATA = createAction(\"PREPARE_DATA\");\r\nconst MODAL_FORM_LOADING = createAction(\"MODAL_FORM_LOADING\");\r\nconst MODAL_FORM_UPDATE_SUCCESS = createAction(\"MODAL_FORM_UPDATE_SUCESS\");\r\nconst SET_PROVINCE = createAction(\"SET_PROVINCE\");\r\nconst SET_SEARCH_KEYWORDS = createAction(\"SET_SEARCH_KEYWORDS\");\r\nconst SET_MODAL_STATUS = createAction(\"SET_MODAL_STATUS\");\r\nconst SET_SELECTED_FILTER = createAction(\"SET_SELECTED_FILTER\");\r\nconst CLOSE_MODAL = createAction(\"CLOSE_MODAL\");\r\nconst UPDATE_FILTERS = createAction(\"UPDATE_FILTERS\");\r\nconst HANDLE_ERRORS = createAction(\"HANDLE_ERRORS\");\r\nconst SET_ERRORS = createAction(\"SET_ERRORS\");\r\n\r\nconst listLoading = loading => ({ type: LIST_LOADING, loading });\r\nconst formLoading = loading => ({ type: MODAL_FORM_LOADING, loading });\r\nconst prepareData = data => ({\r\n  type: PREPARE_DATA,\r\n  provinceList: data\r\n});\r\nconst setOpenModal = openModal => ({ type: OPEN_MODAL, openModal });\r\nconst setErrors = errors => ({ type: SET_ERRORS, errors });\r\nconst modalFormSuccessMessage = message => ({\r\n  type: MODAL_FORM_UPDATE_SUCCESS,\r\n  message\r\n});\r\n\r\nexport const setProvince = province => ({ type: SET_PROVINCE, province });\r\n\r\nexport const setSearchKeywords = searchKeywords => ({ type: SET_SEARCH_KEYWORDS, searchKeywords });\r\n\r\nexport const setModalStatus = modalStatus => ({\r\n  type: SET_MODAL_STATUS,\r\n  modalStatus\r\n});\r\n\r\nexport const setSelectedFilters = selectedFilters => ({\r\n  type: SET_SELECTED_FILTER,\r\n  selectedFilters\r\n});\r\n\r\nexport const closeModal = () => ({ type: CLOSE_MODAL });\r\n\r\nexport const fetchAll = () => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  return axios\r\n    .get(PATH_API, { timeout: 5000 })\r\n    .then(response => dispatch(prepareData(response.data)))\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nexport const doSave = province => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(formLoading(true));\r\n  const {\r\n    id,\r\n    name,\r\n    slugName,\r\n    status\r\n  } = province;\r\n  const params = {\r\n    name,\r\n    slugName,\r\n    status,\r\n  };\r\n  if (!status) {\r\n    params.status = \"ACTIVE\"\r\n  }\r\n  if (!id) {\r\n    dispatch(doCreate(params));\r\n  } else {\r\n    dispatch(doUpdate({ ...params, id }));\r\n  }\r\n};\r\n\r\nexport const getCreateAction = () => dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(setOpenModal(true))\r\n};\r\n\r\nexport const doFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const getUpdateAction = provinceId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(modalFormSuccessMessage(\"\"));\r\n  dispatch(listLoading(true));\r\n  axios\r\n    .get(`${PATH_API}/${provinceId}`, { timeout: 5000 })\r\n    .then(response => {\r\n      dispatch({\r\n        type: SET_PROVINCE,\r\n        province: response.data,\r\n      });\r\n      dispatch(setOpenModal(true));\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(listLoading(false)));\r\n};\r\n\r\nconst doCreate = province => async dispatch => {\r\n  const params = JSON.stringify(province);\r\n  console.log(params)\r\n  axios\r\n    .post(PATH_API, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Province is created successfully!!\")\r\n      dispatch(setProvince(initialState.province));\r\n    })\r\n    .catch(error => {\r\n      toast.error(\"error\")\r\n      dispatch(handleErrors(error, HANDLE_ERRORS))\r\n    })\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nconst doUpdate = province => async dispatch => {\r\n  const params = JSON.stringify(province);\r\n  return axios\r\n    .put(`${PATH_API}/${province.id}`, params, {\r\n      timeout: 5000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => {\r\n      dispatch(prepareData(response.data));\r\n      toast.success(\"Province is update successfully!!\");\r\n      dispatch(closeModal())\r\n    })\r\n    .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n    .finally(() => dispatch(formLoading(false)));\r\n};\r\n\r\nexport const doDelete = provinceId => async dispatch => {\r\n  dispatch(resetSystemErrors());\r\n  dispatch(listLoading(true));\r\n  dispatch(setErrors(initialState.errors));\r\n  const params = JSON.stringify(provinceId);\r\n  CONFIRM_DELETE(\"Bạn sẽ không thể khôi phục lại dữ liệu\").then((result) => {\r\n    if (result.isConfirmed) {\r\n      return !Array.isArray(provinceId) ?\r\n        axios\r\n          .delete(`${PATH_API}/${provinceId}`)\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Province #${provinceId} success!!`);\r\n          })\r\n          .catch(errors => dispatch(handleErrors(errors, HANDLE_ERRORS)))\r\n          .finally(() => dispatch(listLoading(false))) :\r\n        axios\r\n          .post(`${PATH_API}/delete-items`, params, {\r\n            timeout: 5000,\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n          .then(response => {\r\n            dispatch(prepareData(response.data));\r\n            toast.success(`Delete Province #${provinceId} success!!`)\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"error\")\r\n            dispatch(handleErrors(error, HANDLE_ERRORS))\r\n          })\r\n          .finally(() => dispatch(listLoading(false)));\r\n    }\r\n  })\r\n};\r\n\r\nexport const setFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport default function (state = initialState, action) {\r\n  // console.log(action.type)\r\n  try {\r\n    switch (action.type) {\r\n      case LIST_LOADING:\r\n        return { ...state, loading: action.loading };\r\n      // case RELOAD:\r\n      //   return { ...state, reload: true };\r\n      case MODAL_FORM_UPDATE_SUCCESS:\r\n        return { ...state, modalFormSuccessMessage: action.message };\r\n      case OPEN_MODAL:\r\n        return { ...state, openModal: action.openModal };\r\n      // case MODAL_FORM_LOADING:\r\n      //   return {\r\n      //     ...state,\r\n      //     formLoading: action.loading,\r\n      //     errors: action.loading ? initialState.errors : state.errors\r\n      //   };\r\n      case PREPARE_DATA:\r\n        return {\r\n          ...state,\r\n          provinceList: action.provinceList,\r\n          loading: false\r\n        };\r\n      case UPDATE_FILTERS:\r\n        return {\r\n          ...state,\r\n          filters: action.filters\r\n        };\r\n      // case MODAL_FORM_GET_CREATE_ACTION:\r\n      //   return {\r\n      //     ...state,\r\n      //     openModal: true,\r\n      //     modalFormSuccessMessage: initialState.modalFormSuccessMessage\r\n      //   };\r\n      case SET_PROVINCE:\r\n        return {\r\n          ...state,\r\n          province: action.province,\r\n        };\r\n      case SET_SEARCH_KEYWORDS:\r\n        return {\r\n          ...state,\r\n          searchKeywords: action.searchKeywords,\r\n        };\r\n      // case SET_MODAL_STATUS:\r\n      //   return {\r\n      //     ...state,\r\n      //     modalStatus: action.modalStatus,\r\n      //     modalFormSuccessMessage: initialState.modalFormSuccessMessage\r\n      //   };\r\n      case CLOSE_MODAL:\r\n        return {\r\n          ...state,\r\n          openModal: false,\r\n          province: initialState.province,\r\n          formLoading: initialState.formLoading,\r\n          errors: initialState.errors\r\n        };\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...initialState.errors,\r\n            ...action.errors\r\n          }\r\n        };\r\n      case HANDLE_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: {\r\n            ...state.errors,\r\n            ...action.errors.response.data\r\n          }\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n  }\r\n\r\n  return state;\r\n}\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\rootReducer.js",["169","170","171","172","173"],"import { HANDLE_SYSTEM_ERROR } from '../../constants/redux-actions'\r\n// import axios from '../axios'\r\n// import cookie from 'js-cookie'\r\n// import { USER_TOKEN, USER_AUTH } from '../../constants';\r\n\r\nexport const initialState = {\r\n    formLoading: false,\r\n    loginForm: {},\r\n    userAuth: {},\r\n    systemErrors: {\r\n        message: '',\r\n        detail: ''\r\n    },\r\n    errors: {\r\n        formErrors: {},\r\n        errorMessage: ''\r\n    },\r\n    systemPopup: {\r\n        open: false,\r\n        type: 'success',\r\n        message: ''\r\n    }\r\n}\r\n\r\nconst PATH_API_LOGIN = 'user/login'\r\nconst PATH_API_LOGOUT = 'user/logout'\r\nconst createAction = action => `SYSTEM_${action}`\r\n\r\nconst SYSTEM_ERROR_MESSAGE = 'The system has an undefined error, please try again later.'\r\n\r\nconst RESET_SYSTEM_ERRORS = 'RESET_SYSTEM_ERRORS'\r\nconst SET_SYSTEM_POPUP = 'SET_SYSTEM_POPUP'\r\n\r\nexport const reload = pageName => ({ type: `${pageName}_RELOAD` })\r\n\r\nconst SET_LOGIN_FORM = createAction(\"SET_LOGIN_FORM\")\r\nexport const setLoginForm = loginForm => ({ type: SET_LOGIN_FORM, loginForm })\r\n\r\nconst SET_FORM_LOADING = createAction(\"SET_FORM_LOADING\")\r\nconst setFormLoading = loading => ({ type: SET_FORM_LOADING, loading })\r\n\r\n// const SET_USER_AUTH = createAction(\"SET_USER_AUTH\")\r\n// export const setUserAuth = userAuth => ({ type: SET_USER_AUTH, userAuth })\r\n\r\nconst HANDLE_FORM_ERRORS = createAction(\"HANDLE_FORM_ERRORS\")\r\n\r\n// export const doLogin = (params, callback) => dispatch => {\r\n//     dispatch(setFormLoading(true))\r\n//     return axios.post(PATH_API_LOGIN, params, {\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         }\r\n//     })\r\n//     .then(response => {\r\n//         cookie.set(USER_TOKEN, response.data.token)\r\n//         cookie.set(USER_AUTH, response.data)\r\n//         dispatch(setUserAuth(response.data))\r\n//         callback()\r\n//     })\r\n//     .catch(error => dispatch(handleErrors(error, HANDLE_FORM_ERRORS)))\r\n//     .finally(() => dispatch(setFormLoading(false)))\r\n// }\r\n\r\n// export const doLogout = callback => dispatch => {\r\n//     // return axios.post(PATH_API_LOGOUT, params, {\r\n//     //     headers: {\r\n//     //         'Content-Type': 'application/json'\r\n//     //     }\r\n//     // })\r\n//     // .then(() => {\r\n//     //     cookie.remove(USER_TOKEN)\r\n//     //     dispatch(setUserAuth({}))\r\n//     //     callback()\r\n//     // })\r\n//     // .catch(error => dispatch(handleErrors(error, HANDLE_ERRORS)))\r\n//     // .finally(() => dispatch(setFormLoading(false)))\r\n//     cookie.remove(USER_TOKEN)\r\n//     callback()\r\n// }\r\n\r\nexport const handleErrors = (errors = {}, pageErrorHandle) => {\r\n    console.log(errors)\r\n    if (errors.response) {\r\n        if (errors.response.data && errors.response.data.formErrors) {\r\n            return ({ type: pageErrorHandle, ...errors.response.data })\r\n        }\r\n    }\r\n    return ({ type: HANDLE_SYSTEM_ERROR })\r\n}\r\n\r\nexport const openSystemPopup = (open, message, typePopup = 'success') => {\r\n    return ({ type: SET_SYSTEM_POPUP, open, message, typePopup })\r\n}\r\n\r\nexport const resetSystemErrors = () => ({ type: RESET_SYSTEM_ERRORS })\r\n\r\nexport default function(state = initialState, action) {\r\n    try {\r\n        switch (action.type) {\r\n            case SET_FORM_LOADING: return {\r\n                ...state,\r\n                formLoading: action.loading\r\n            }\r\n            case HANDLE_SYSTEM_ERROR: return {\r\n                ...state,\r\n                systemErrors: {\r\n                    message: SYSTEM_ERROR_MESSAGE,\r\n                    detail: action.detail\r\n                }\r\n            }\r\n            case RESET_SYSTEM_ERRORS: return {\r\n                ...state,\r\n                systemErrors: initialState.systemErrors\r\n            }\r\n            // case SET_USER_AUTH: return {\r\n            //     ...state,\r\n            //     userAuth: action.userAuth\r\n            // }\r\n            case SET_LOGIN_FORM: return {\r\n                ...state,\r\n                loginForm: action.loginForm\r\n            }\r\n            case SET_SYSTEM_POPUP: return {\r\n                ...state,\r\n                systemPopup: {\r\n                    open: action.open,\r\n                    type: action.typePopup,\r\n                    message: action.message\r\n                }\r\n            }\r\n            default: return {\r\n                ...state\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    return state;\r\n}","D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\axios.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\redux-actions.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\redux\\reducers\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\organisms\\Province\\ProvinceModal\\index.js",["174","175"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport Input from \"../../../atoms/Input\";\r\nimport CheckBox from \"../../../atoms/CheckBox\";\r\nimport { makeSlug } from \"../../../../commons/utils\";\r\nimport ModalModule from \"../../../molecules/ModalModule\";\r\nimport FormGroup from \"../../../atoms/FormGroup\";\r\nimport ToggleActive from \"../../../atoms/ToggleActive\";\r\n\r\nimport {\r\n  closeModal,\r\n  doSave,\r\n  setProvince\r\n} from '../../../../redux/reducers/provinceReducer';\r\nconst Render = ({\r\n  openModal,\r\n  formLoading,\r\n  modalFormSuccessMessage,\r\n  slugCheckBox,\r\n  onClickCheckBox,\r\n  province: {\r\n    id,\r\n    name,\r\n    slugName,\r\n    status\r\n  },\r\n  errors: { formErrors },\r\n  onChangeForm,\r\n  onPositive,\r\n  onClose\r\n}) => (\r\n  <ModalModule\r\n    title={id ? \"Update Province\" : \"Create Province\"}\r\n    open={openModal}\r\n    loading={formLoading}\r\n    modalSuccess={modalFormSuccessMessage}\r\n    maxWidth=\"md\"\r\n    onPositive={onPositive}\r\n    onClose={onClose}\r\n  >\r\n    <FormGroup row>\r\n      {id &&\r\n        <Input label=\"Province Id: \"\r\n          name=\"id\"\r\n          width=\"25%\"\r\n          value={id}\r\n          onChange={onChangeForm}\r\n          disabled={true}\r\n          error={formErrors.id} />\r\n      }\r\n      <Input\r\n        required\r\n        label=\"Province Name: \"\r\n        name=\"name\"\r\n        width={id && \"70%\"}\r\n        value={name}\r\n        onChange={onChangeForm}\r\n        error={formErrors.name}\r\n      />\r\n    </FormGroup>\r\n\r\n    <FormGroup row>\r\n      <CheckBox\r\n        label=\"Customize Slug\"\r\n        checked={slugCheckBox}\r\n        onClick={onClickCheckBox}\r\n      />\r\n      <ToggleActive\r\n        checked={status}\r\n        onChange={onChangeForm}\r\n      />\r\n    </FormGroup>\r\n    <Input\r\n      required\r\n      label=\"Province Slug Name: \"\r\n      name=\"slugName\"\r\n      value={slugName}\r\n      onChange={onChangeForm}\r\n      disabled={!slugCheckBox}\r\n      error={formErrors.slugName}\r\n    />\r\n  </ModalModule>\r\n);\r\n\r\nconst ProvinceModal = () => {\r\n  const selector = useSelector(\r\n    ({\r\n      provinceReducer: {\r\n        openModal,\r\n        modalFormSuccessMessage,\r\n        formLoading,\r\n        province,\r\n        errors\r\n      }\r\n    }) => ({\r\n      openModal,\r\n      modalFormSuccessMessage,\r\n      formLoading,\r\n      province,\r\n      errors\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  const [slugCheckBox, setSlugCheckBox] = useState(false)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const renderProps = {\r\n    ...selector,\r\n    slugCheckBox,\r\n    onClickCheckBox: () => setSlugCheckBox(!slugCheckBox),\r\n    onChangeForm: (_, { name, value }) =>\r\n      !slugCheckBox && name === \"name\" &&\r\n      dispatch(setProvince({ ...selector.province, [name]: value, slugName: makeSlug(value) })) ||\r\n      dispatch(setProvince({ ...selector.province, [name]: value })),\r\n    onPositive: () => dispatch(doSave(selector.province)),\r\n    onClose: () => dispatch(closeModal())\r\n  };\r\n\r\n  return <Render {...renderProps} />;\r\n};\r\n\r\nexport default ProvinceModal;\r\n","D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\molecules\\ModalModule\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\CheckBox\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\utils.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\FormGroup\\index.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\commons\\sweet-alert-modal.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\sweet-alert2.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\constants\\entities.js",[],"D:\\Documents\\dev\\fe-react-dashboard\\src\\components\\atoms\\ToggleActive\\index.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":28,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"183","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"186","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"187","line":5,"column":47,"nodeType":"184","messageId":"185","endLine":5,"endColumn":54},{"ruleId":"188","severity":1,"message":"189","line":48,"column":33,"nodeType":"190","messageId":"191","endLine":48,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":49,"column":47,"nodeType":"190","messageId":"191","endLine":49,"endColumn":49},{"ruleId":"176","replacedBy":"192"},{"ruleId":"178","replacedBy":"193"},{"ruleId":"182","severity":1,"message":"194","line":12,"column":3,"nodeType":"184","messageId":"185","endLine":12,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":219,"column":1,"nodeType":"197","endLine":303,"endColumn":2},{"ruleId":"182","severity":1,"message":"198","line":25,"column":7,"nodeType":"184","messageId":"185","endLine":25,"endColumn":21},{"ruleId":"182","severity":1,"message":"199","line":26,"column":7,"nodeType":"184","messageId":"185","endLine":26,"endColumn":22},{"ruleId":"182","severity":1,"message":"200","line":40,"column":7,"nodeType":"184","messageId":"185","endLine":40,"endColumn":21},{"ruleId":"182","severity":1,"message":"201","line":45,"column":7,"nodeType":"184","messageId":"185","endLine":45,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":97,"column":1,"nodeType":"197","endLine":140,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":115,"column":40,"nodeType":"204","messageId":"205","endLine":115,"endColumn":42},{"ruleId":"202","severity":1,"message":"203","line":116,"column":97,"nodeType":"204","messageId":"205","endLine":116,"endColumn":99},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'DELETED' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["206"],["207"],"'openSystemPopup' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'PATH_API_LOGIN' is assigned a value but never used.","'PATH_API_LOGOUT' is assigned a value but never used.","'setFormLoading' is assigned a value but never used.","'HANDLE_FORM_ERRORS' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]